import { SimpleMidiMessage } from './MidiMessage';
import { Session } from '../session';
export interface NaiveMidiMessage extends SimpleMidiMessage {
    label?: string;
    port: number;
}
export interface NaiveSysexMessage {
    label?: string;
    port: number;
    data: string;
}
export declare class MidiOutProxy {
    private _midiQueue;
    private _sysexQueue;
    constructor(session: Session);
    sendMidi({label, port, status, data1, data2, urgent}: {
        label?: string;
        port?: number;
        status: number;
        data1: number;
        data2: number;
        urgent?: boolean;
    }): void;
    sendSysex({label, port, data, urgent}: {
        label?: string;
        port?: number;
        data: string;
        urgent?: boolean;
    }): void;
    sendNoteOn({port, channel, key, velocity, urgent}: {
        port?: number;
        channel: number;
        key: number;
        velocity: number;
        urgent?: boolean;
    }): void;
    sendNoteOff({port, channel, key, velocity, urgent}: {
        port?: number;
        channel: number;
        key: number;
        velocity: number;
        urgent?: boolean;
    }): void;
    sendKeyPressure({port, channel, key, pressure, urgent}: {
        port?: number;
        channel: number;
        key: number;
        pressure: number;
        urgent?: boolean;
    }): void;
    sendControlChange({port, channel, control, value, urgent}: {
        port?: number;
        channel: number;
        control: number;
        value: number;
        urgent?: boolean;
    }): void;
    sendProgramChange({port, channel, program, urgent}: {
        port?: number;
        channel: number;
        program: number;
        urgent?: boolean;
    }): void;
    sendChannelPressure({port, channel, pressure, urgent}: {
        port?: number;
        channel: number;
        pressure: number;
        urgent?: boolean;
    }): void;
    sendPitchBend({port, channel, value, urgent}: {
        port?: number;
        channel: number;
        value: number;
        urgent?: boolean;
    }): void;
    protected _flushQueues(): void;
}
