export interface SimpleMidiMessage {
    port: number;
    status: number;
    data1: number;
    data2: number;
}
export interface MidiMessageConstructor {
    port?: number;
    status: number;
    data1: number;
    data2: number;
    urgent?: boolean;
}
export declare class MidiMessage implements SimpleMidiMessage {
    port: number;
    status: number;
    data1: number;
    data2: number;
    urgent: boolean;
    hex: string;
    constructor({port, status, data1, data2, urgent}: MidiMessageConstructor);
    readonly shortHex: string;
    readonly channel: number;
    readonly pitchBendValue: number;
    readonly isNote: boolean;
    readonly isNoteOff: boolean;
    readonly isNoteOn: boolean;
    readonly isKeyPressure: boolean;
    readonly isControlChange: boolean;
    readonly isProgramChange: boolean;
    readonly isChannelPressure: boolean;
    readonly isPitchBend: boolean;
    readonly isMTCQuarterFrame: boolean;
    readonly isSongPositionPointer: boolean;
    readonly isSongSelect: boolean;
    readonly isTuneRequest: boolean;
    readonly isTimingClock: boolean;
    readonly isMIDIStart: boolean;
    readonly isMIDIContinue: boolean;
    readonly isMidiStop: boolean;
    readonly isActiveSensing: boolean;
    readonly isSystemReset: boolean;
    toString(): string;
}
