import { Component, ComponentState, ComponentParams } from './Component';
import { ControlState } from '../control/Control';
export declare type ButtonParams = ComponentParams;
export interface ButtonState extends ComponentState {
    on: boolean;
    color?: {
        r: number;
        g: number;
        b: number;
    };
}
/**
 * A button component providing method hooks for press, long press,
 * double press, release, and double release events.
 */
export declare abstract class Button<Params extends ButtonParams = ButtonParams, State extends ButtonState = ButtonState> extends Component<Params, State> {
    state: State;
    memory: {
        [key: string]: any;
    };
    LONG_PRESS_DELAY: number;
    DOUBLE_PRESS_DELAY: number;
    onPress?(): void;
    onLongPress?(): void;
    onDoublePress?(): void;
    onRelease?(): void;
    onDoubleRelease?(): void;
    onControlInput(input: ControlState): void;
    getControlOutput(): ControlState;
    isPress(value: number): boolean;
    isRelease(value: number): boolean;
    isDoublePress(value: number): boolean;
    isDoubleRelease(value: number): boolean;
    handlePress(value: number): void;
    handleDoublePress(value: number): void;
    handleLongPress(value: number): void;
    handleRelease(value: number): void;
    handleDoubleRelease(value: number): void;
}
